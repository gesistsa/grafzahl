[{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://gesistsa.github.io/grafzahl/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://gesistsa.github.io/grafzahl/articles/grafzahl.html","id":"google-colab-and-similar-services","dir":"Articles","previous_headings":"","what":"Google Colab and similar services","title":"Setup Guide","text":"order use grafzahl Google Colab, please choose R-based Runtime (Runtime > Change Runtime Type > Runtime Type: R). might also want choose hardware accelerator, e.g. T4 GPU. case, need enable non-Conda mode, .e. use_nonconda(). default, also install required Python packages.","code":"install.packages(\"grafzahl\") use_nonconda(install = TRUE, check = TRUE) # default  ## Use grafzahl right away, an example model <- grafzahl(unciviltweets, model_type = \"bertweet\", model_name = \"vinai/bertweet-base\")"},{"path":"https://gesistsa.github.io/grafzahl/articles/grafzahl.html","id":"default-python","dir":"Articles","previous_headings":"","what":"Default Python","title":"Setup Guide","text":"don’t want use conda configuration local machine, can just install Python packages simpletransformers emoji. ","code":"python3 -m pip install simpletransformers emoji require(grafzahl) use_nonconda(install = FALSE, check = TRUE) ## what it does is just: options(\"grafzahl.nonconda\" = TRUE)  ## Use grafzahl right away, an example model <- grafzahl(unciviltweets, model_type = \"bertweet\", model_name = \"vinai/bertweet-base\")"},{"path":"https://gesistsa.github.io/grafzahl/articles/grafzahl.html","id":"use-conda-but-not-the-grafzahls-default","dir":"Articles","previous_headings":"","what":"Use conda, but not the grafzahl’s default","title":"Setup Guide","text":"Suppose installed conda installation elsewhere. Please note base path conda installation. Create new conda environment default grafzahl environment name","code":"conda env list"},{"path":"https://gesistsa.github.io/grafzahl/articles/grafzahl.html","id":"with-cuda","dir":"Articles","previous_headings":"Use conda, but not the grafzahl’s default","what":"With Cuda","title":"Setup Guide","text":"","code":"conda env create -n grafzahl_condaenv_cuda conda activate grafzahl_condaenv_cuda conda install -n grafzahl_condaenv_cuda python pip pytorch pytorch-cuda cudatoolkit -c pytorch -c nvidia python -m pip install simpletransformers emoji conda deactivate  ## Test the CUDA installation with  Rscript -e \"grafzahl::detect_cuda()\""},{"path":"https://gesistsa.github.io/grafzahl/articles/grafzahl.html","id":"without-cuda","dir":"Articles","previous_headings":"Use conda, but not the grafzahl’s default","what":"Without Cuda","title":"Setup Guide","text":"R, change default conda path","code":"conda env create -n grafzahl_condaenv conda activate grafzahl_condaenv conda install -n grafzahl_condaenv python pip pytorch -c pytorch python -m pip install simpletransformers emoji conda deactivate ## suppose /home/yourname/miniconda is the base path of your conda installation require(grafzahl) Sys.setenv(GRAFZAHL_MINICONDA_PATH = \"/home/yourname/miniconda\")  ## Use grafzahl right away, an example model <- grafzahl(unciviltweets, model_type = \"bertweet\", model_name = \"vinai/bertweet-base\")"},{"path":"https://gesistsa.github.io/grafzahl/articles/grafzahl.html","id":"explanation-important-options-and-envvars","dir":"Articles","previous_headings":"","what":"Explanation: Important options and envvars","title":"Setup Guide","text":"two important options envvars. options(\"grafzahl.nonconda\") controls whether use non-conda mode. Envvar GRAFZAHL_MINICONDA_PATH controls base path conda installation. \"\" (default), reticulate::miniconda_path() used base path.","code":""},{"path":"https://gesistsa.github.io/grafzahl/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chung-hong Chan. Author, maintainer.","code":""},{"path":"https://gesistsa.github.io/grafzahl/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chan C (2023). “grafzahl: fine-tuning Transformers text data within R.” Computational Communication Research, 5(1), 76-84. doi:10.5117/CCR2023.1.003.CHAN.","code":"@Article{,   title = {grafzahl: fine-tuning Transformers for text data from within R.},   journal = {Computational Communication Research},   author = {Chung-hong Chan},   doi = {10.5117/CCR2023.1.003.CHAN},   volume = {5},   number = {1},   pages = {76-84},   year = {2023}, }"},{"path":"https://gesistsa.github.io/grafzahl/index.html","id":"grafzahl-","dir":"","previous_headings":"","what":"Supervised Machine Learning for Textual Data Using Transformers and Quanteda","title":"Supervised Machine Learning for Textual Data Using Transformers and Quanteda","text":"goal grafzahl (Gracious R Analytical Framework Zappy Analysis Human Languages [1]) duct tape quanteda ecosystem modern Transformer-based text classification models, e.g. BERT, RoBERTa, etc. model object looks feels like textmodel S3 object package quanteda.textmodels. don’t know talking , don’t worry, package gracious. don’t need know lot Transformers use package. See examples . Please cite software : Chan, C., (2023). grafzahl: fine-tuning Transformers text data within R. Computational Communication Research 5(1): 76-84. https://doi.org/10.5117/CCR2023.1.003.CHAN","code":""},{"path":"https://gesistsa.github.io/grafzahl/index.html","id":"installation-local-environment","dir":"","previous_headings":"","what":"Installation: Local environment","title":"Supervised Machine Learning for Textual Data Using Transformers and Quanteda","text":"Install CRAN version , need setup conda environment","code":"install.packages(\"grafzahl\") require(grafzahl) setup_grafzahl(cuda = TRUE) ## if you have GPU(s)"},{"path":"https://gesistsa.github.io/grafzahl/index.html","id":"on-remote-environments-eg-google-colab","dir":"","previous_headings":"","what":"On remote environments, e.g. Google Colab","title":"Supervised Machine Learning for Textual Data Using Transformers and Quanteda","text":"Google Colab, need enable non-Conda mode Please refer vignette.","code":"install.packages(\"grafzahl\") require(grafzahl) use_nonconda()"},{"path":"https://gesistsa.github.io/grafzahl/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Supervised Machine Learning for Textual Data Using Transformers and Quanteda","text":"Suppose bunch tweets quanteda corpus format. corpus exactly one docvar denotes labels want predict. data repository (Theocharis et al., 2020). order train Transfomer model, please select model_name Hugging Face’s list. table lists common choices. time, providing model_name sufficient, need provide model_type. Suppose want train Transformer model using “bertweet” (Nguyen et al., 2020) matches domain usage. default, save model output directory current directory. can change elsewhere using output_dir parameter. Make prediction .","code":"unciviltweets #> Corpus consisting of 19,982 documents and 1 docvar. #> text1 : #> \"@ @ Karma gave you a second chance yesterday.  Start doing m...\" #>  #> text2 : #> \"@ With people like you, Steve King there's still hope for we...\" #>  #> text3 : #> \"@ @ You bill is a joke and will sink the GOP. #WEDESERVEBETT...\" #>  #> text4 : #> \"@ Dream on. The only thing trump understands is how to enric...\" #>  #> text5 : #> \"@ @ Just like the Democrat taliban party was up front with t...\" #>  #> text6 : #> \"@ you are going to have more of the same with HRC, and you a...\" #>  #> [ reached max_ndoc ... 19,976 more documents ] model <- grafzahl(unciviltweets, model_type = \"bertweet\", model_name = \"vinai/bertweet-base\") ### If you are hardcore quanteda user: ## model <- textmodel_transformer(unciviltweets, ##                                model_type = \"bertweet\", model_name = \"vinai/bertweet-base\") predict(model)"},{"path":"https://gesistsa.github.io/grafzahl/index.html","id":"extended-examples","dir":"","previous_headings":"","what":"Extended examples","title":"Supervised Machine Learning for Textual Data Using Transformers and Quanteda","text":"Several extended examples also available.","code":""},{"path":[]},{"path":"https://gesistsa.github.io/grafzahl/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Supervised Machine Learning for Textual Data Using Transformers and Quanteda","text":"Nguyen, D. Q., Vu, T., & Nguyen, . T. (2020). BERTweet: pre-trained language model English Tweets. arXiv preprint arXiv:2005.10200. Yes, totally made meaningless long name. Actually, German name Sesame Street character Count von Count, meaning “Count (noble title) Number”. seems compulsory name absolutely everything related Transformers Seasame Street characters.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/detect_cuda.html","id":null,"dir":"Reference","previous_headings":"","what":"Detecting Miniconda And Cuda — detect_conda","title":"Detecting Miniconda And Cuda — detect_conda","text":"functions detects miniconda cuda.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/detect_cuda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detecting Miniconda And Cuda — detect_conda","text":"","code":"detect_conda()  detect_cuda()"},{"path":"https://gesistsa.github.io/grafzahl/reference/detect_cuda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detecting Miniconda And Cuda — detect_conda","text":"boolean, whether system available.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/detect_cuda.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detecting Miniconda And Cuda — detect_conda","text":"detect_conda conducts test check whether 1) miniconda installation 2) grafzahl miniconda environment exist. detect_cuda checks whether cuda available. setup_grafzahl executed cuda FALSE, function return FALSE. Even setup_grafzahl executed cuda TRUE factor enable cuda (e.g. Nvidia GPU, environment incorrectly created), function also return FALSE.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/ecosent.html","id":null,"dir":"Reference","previous_headings":"","what":"A Corpus Of Dutch News Headlines — ecosent","title":"A Corpus Of Dutch News Headlines — ecosent","text":"dataset paper \"Validity Sentiment Analysis: Comparing Manual Annotation, Crowd-Coding, Dictionary Approaches, Machine Learning Algorithms.\" data frame contains four columns: id (identifier), headline (actual text data), value (sentiment: 0 Neutral, +1 Positive, -1 Negative), gold (whether row \"gold standard\", .e. test set). data available Wouter van Atteveldt's Github. https://github.com/vanatteveldt/ecosent","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/ecosent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Corpus Of Dutch News Headlines — ecosent","text":"","code":"ecosent"},{"path":"https://gesistsa.github.io/grafzahl/reference/ecosent.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A Corpus Of Dutch News Headlines — ecosent","text":"object class data.frame 6322 rows 4 columns.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/ecosent.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A Corpus Of Dutch News Headlines — ecosent","text":"Van Atteveldt, W., Van der Velden, M. ., & Boukes, M. (2021). validity sentiment analysis: Comparing manual annotation, crowd-coding, dictionary approaches, machine learning algorithms. Communication Methods Measures, 15(2), 121-140.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/get_amharic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download The Amharic News Text Classification Dataset — get_amharic_data","title":"Download The Amharic News Text Classification Dataset — get_amharic_data","text":"function downloads training test sets Amharic News Text Classification Dataset Hugging Face.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/get_amharic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download The Amharic News Text Classification Dataset — get_amharic_data","text":"","code":"get_amharic_data()"},{"path":"https://gesistsa.github.io/grafzahl/reference/get_amharic_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download The Amharic News Text Classification Dataset — get_amharic_data","text":"named list two corpora: training test","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/get_amharic_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download The Amharic News Text Classification Dataset — get_amharic_data","text":"Azime, Israel Abebe, Nebil Mohammed (2021). \"Amharic News Text classification Dataset.\" arXiv preprint arXiv:2103.05639","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/grafzahl.html","id":null,"dir":"Reference","previous_headings":"","what":"Fine tune a pretrained Transformer model for texts — grafzahl","title":"Fine tune a pretrained Transformer model for texts — grafzahl","text":"Fine tune (train) pretrained Transformer model given training labelled data x y. prediction task can classification (regression FALSE, default) regression (regression TRUE).","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/grafzahl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fine tune a pretrained Transformer model for texts — grafzahl","text":"","code":"grafzahl(   x,   y = NULL,   model_name = \"xlm-roberta-base\",   regression = FALSE,   output_dir,   cuda = detect_cuda(),   num_train_epochs = 4,   train_size = 0.8,   args = NULL,   cleanup = TRUE,   model_type = NULL,   manual_seed = floor(runif(1, min = 1, max = 721831)),   verbose = TRUE )  # Default S3 method grafzahl(   x,   y = NULL,   model_name = \"xlm-roberta-base\",   regression = FALSE,   output_dir,   cuda = detect_cuda(),   num_train_epochs = 4,   train_size = 0.8,   args = NULL,   cleanup = TRUE,   model_type = NULL,   manual_seed = floor(runif(1, min = 1, max = 721831)),   verbose = TRUE )  # S3 method for class 'corpus' grafzahl(   x,   y = NULL,   model_name = \"xlm-roberta-base\",   regression = FALSE,   output_dir,   cuda = detect_cuda(),   num_train_epochs = 4,   train_size = 0.8,   args = NULL,   cleanup = TRUE,   model_type = NULL,   manual_seed = floor(runif(1, min = 1, max = 721831)),   verbose = TRUE )  textmodel_transformer(...)  # S3 method for class 'character' grafzahl(   x,   y = NULL,   model_name = \"xlmroberta\",   regression = FALSE,   output_dir,   cuda = detect_cuda(),   num_train_epochs = 4,   train_size = 0.8,   args = NULL,   cleanup = TRUE,   model_type = NULL,   manual_seed = floor(runif(1, min = 1, max = 721831)),   verbose = TRUE )"},{"path":"https://gesistsa.github.io/grafzahl/reference/grafzahl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fine tune a pretrained Transformer model for texts — grafzahl","text":"x corpus character vector texts model trained. Depending train_size, texts used cross-validation. y training labels. can either single string indicating docvars corpus training labels; vector training labels either character factor; NULL corpus contains exactly one column docvars column training labels. x character vector, y must vector length. model_name string indicates either 1) model name Hugging Face website; 2) local path model regression logical, TRUE, task regression, classification otherwise. output_dir string, location output model. missing, model stored temporary directory. Important: Please note directory exists, overwritten. cuda logical, whether use CUDA, default detect_cuda(). num_train_epochs numeric, train_size exactly 1.0, maximum number epochs try \"early stop\" regime number times 5 (.e. 4 * 5 = 20 default). train_size exactly 1.0, number epochs exactly . train_size numeric, proportion data x y used actually training. rest used cross validation. args list, additionally parameters used underlying simple transformers cleanup logical, TRUE, runs directory generated removed training done model_type string indicating model_type input model. NULL, inferred model_name. Supported model types available supported_model_types. manual_seed numeric, random seed verbose logical, TRUE, debug messages displayed ... paramters pass grafzahl()","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/grafzahl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fine tune a pretrained Transformer model for texts — grafzahl","text":"grafzahl S3 object following items call original function call input_data input_data underlying python function output_dir location output model model_type model type model_name model name regression whether regression model levels factor levels y manual_seed random seed meta metadata current session","code":""},{"path":[]},{"path":"https://gesistsa.github.io/grafzahl/reference/grafzahl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fine tune a pretrained Transformer model for texts — grafzahl","text":"","code":"if (detect_conda() && interactive()) { library(quanteda) set.seed(20190721) ## Using the default cross validation method model1 <- grafzahl(unciviltweets, model_type = \"bertweet\", model_name = \"vinai/bertweet-base\") predict(model1)  ## Using LIME input <- corpus(ecosent, text_field = \"headline\") training_corpus <- corpus_subset(input, !gold) model2 <- grafzahl(x = training_corpus,                  y = \"value\",                  model_name = \"GroNLP/bert-base-dutch-cased\") test_corpus <- corpus_subset(input, gold) predicted_sentiment <- predict(model2, test_corpus) require(lime) sentences <- c(\"Dijsselbloem pessimistisch over snelle stappen Grieken\",                \"Aandelenbeurzen zetten koersopmars voort\") explainer <- lime(training_corpus, model2) explanations <- explain(sentences, explainer, n_labels = 1,                         n_features = 2) plot_text_explanations(explanations) }"},{"path":"https://gesistsa.github.io/grafzahl/reference/hydrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a grafzahl S3 object from the output_dir — hydrate","title":"Create a grafzahl S3 object from the output_dir — hydrate","text":"Create grafzahl S3 object output_dir","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/hydrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a grafzahl S3 object from the output_dir — hydrate","text":"","code":"hydrate(output_dir, model_type = NULL, regression = FALSE)"},{"path":"https://gesistsa.github.io/grafzahl/reference/hydrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a grafzahl S3 object from the output_dir — hydrate","text":"output_dir string, location output model. missing, model stored temporary directory. Important: Please note directory exists, overwritten. model_type string indicating model_type input model. NULL, inferred model_name. Supported model types available supported_model_types. regression logical, TRUE, task regression, classification otherwise.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/hydrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a grafzahl S3 object from the output_dir — hydrate","text":"grafzahl S3 object following items call original function call input_data input_data underlying python function output_dir location output model model_type model type model_name model name regression whether regression model levels factor levels y manual_seed random seed meta metadata current session","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/predict.grafzahl.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction from a fine-tuned grafzahl object — predict.grafzahl","title":"Prediction from a fine-tuned grafzahl object — predict.grafzahl","text":"Make prediction fine-tuned grafzahl object.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/predict.grafzahl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction from a fine-tuned grafzahl object — predict.grafzahl","text":"","code":"# S3 method for class 'grafzahl' predict(object, newdata, cuda = detect_cuda(), return_raw = FALSE, ...)"},{"path":"https://gesistsa.github.io/grafzahl/reference/predict.grafzahl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction from a fine-tuned grafzahl object — predict.grafzahl","text":"object S3 object trained grafzahl() newdata corpus character vector texts prediction made. cuda logical, whether use CUDA, default detect_cuda(). return_raw logical, TRUE, return matrix logits; vector class prediction otherwise ... used","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/predict.grafzahl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction from a fine-tuned grafzahl object — predict.grafzahl","text":"vector class prediction matrix logits","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/setup_grafzahl.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup grafzahl — setup_grafzahl","title":"Setup grafzahl — setup_grafzahl","text":"Install self-contained miniconda environment Python components (PyTorch, Transformers, Simpletransformers, etc) grafzahl required. default location \"~/.local/share/r-miniconda/envs/grafzahl_condaenv\" (suffix \"_cuda\" added cuda TRUE). Linux Mac miniconda found, function also install miniconda. path can changed environment variable GRAFZAHL_MINICONDA_PATH","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/setup_grafzahl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup grafzahl — setup_grafzahl","text":"","code":"setup_grafzahl(cuda = FALSE, force = FALSE, cuda_version = \"11.3\")"},{"path":"https://gesistsa.github.io/grafzahl/reference/setup_grafzahl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup grafzahl — setup_grafzahl","text":"cuda logical, TRUE, indicate whether CUDA-enabled environment wanted. force logical, TRUE, delete previous environment (exists) create new environment cuda_version character, indicate CUDA version, ignore cuda FALSE","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/setup_grafzahl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup grafzahl — setup_grafzahl","text":"TRUE (invisibly) installation successful.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/setup_grafzahl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setup grafzahl — setup_grafzahl","text":"","code":"# setup an environment with cuda enabled. if (detect_conda() && interactive()) {     setup_grafzahl(cuda = TRUE) }"},{"path":"https://gesistsa.github.io/grafzahl/reference/supported_model_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Supported model types — supported_model_types","title":"Supported model types — supported_model_types","text":"vector supported model types.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/supported_model_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supported model types — supported_model_types","text":"","code":"supported_model_types"},{"path":"https://gesistsa.github.io/grafzahl/reference/supported_model_types.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Supported model types — supported_model_types","text":"object class character length 23.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/unciviltweets.html","id":null,"dir":"Reference","previous_headings":"","what":"A Corpus Of Tweets With Incivility Labels — unciviltweets","title":"A Corpus Of Tweets With Incivility Labels — unciviltweets","text":"dataset paper \"Dynamics Political Incivility Twitter\". tweets Members Congress elected 115th Congress (2017–2018). important note incivility labels coded human. Majority labels coded Google Perspective API. mentions removed. dataset available Pablo Barbera's Github. https://github.com/pablobarbera/incivility-sage-open","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/unciviltweets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Corpus Of Tweets With Incivility Labels — unciviltweets","text":"","code":"unciviltweets"},{"path":"https://gesistsa.github.io/grafzahl/reference/unciviltweets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A Corpus Of Tweets With Incivility Labels — unciviltweets","text":"object class corpus (inherits character) length 19982.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/unciviltweets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A Corpus Of Tweets With Incivility Labels — unciviltweets","text":"Theocharis, Y., Barberá, P., Fazekas, Z., & Popa, S. . (2020). dynamics political incivility Twitter. Sage Open, 10(2), 2158244020919447.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/use_nonconda.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up grafzahl to be used on Google Colab or similar environments — use_nonconda","title":"Set up grafzahl to be used on Google Colab or similar environments — use_nonconda","text":"Set grafzahl used Google Colab similar environments. function also useful want use conda local machine, e.g. configurateed required Python package.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/use_nonconda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up grafzahl to be used on Google Colab or similar environments — use_nonconda","text":"","code":"use_nonconda(install = TRUE, check = TRUE, verbose = TRUE)"},{"path":"https://gesistsa.github.io/grafzahl/reference/use_nonconda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up grafzahl to be used on Google Colab or similar environments — use_nonconda","text":"install logical, whether install required Python packages check logical, whether perform check setup. check displays 1) whether CUDA can detected, 2) whether non-conda mode activated, .e. whether option 'grafzahl.nonconda' TRUE. verbose, logical, whether display messages","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/use_nonconda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up grafzahl to be used on Google Colab or similar environments — use_nonconda","text":"TRUE (invisibly) installation successful.","code":""},{"path":"https://gesistsa.github.io/grafzahl/reference/use_nonconda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up grafzahl to be used on Google Colab or similar environments — use_nonconda","text":"","code":"# A typical use case for Google Colab if (interactive()) {     use_nonconda() }"}]
